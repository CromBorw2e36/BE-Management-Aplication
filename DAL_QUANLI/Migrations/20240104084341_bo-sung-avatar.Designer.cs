// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using quan_li_app.Models;

#nullable disable

namespace quanliapp.Migrations.Data
{
    [DbContext(typeof(DataContext))]
    [Migration("20240104084341_bo-sung-avatar")]
    partial class bosungavatar
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("quan_li_app.Models.Common.SysModule", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("enabled")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.ToTable("SysModule", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.Common.SysPermission", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("codeCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("level")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("order_number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.ToTable("SysPermission", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.Common.SysStatus", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("appModule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("enable")
                        .HasColumnType("bit");

                    b.Property<string>("module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("order_numer")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("SysStatus", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.Common.SysTypeAccount", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.ToTable("SysTypeAccount", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.DataDB.Account", b =>
                {
                    b.Property<string>("account")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("codePermision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("create_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("last_enter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("lock_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_account")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.HasKey("account");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.DataDB.Company", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("active")
                        .HasColumnType("bit");

                    b.Property<string>("address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("adminCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.DataDB.MenuPermissions", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("menuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("MenuPermissions", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.DataDB.QuanLiNhanSu.CurrentJobPosition", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdUserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("currentProjects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("departmentOrTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("goalsAndDevelopment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modyfiBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("positionAndLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("workSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CurrentJobPosition", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.DataDB.QuanLiNhanSu.SalaryAndBenefits", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdUserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("allowancesAndAids")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("allowancesAndAids1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("allowancesAndAids2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("allowancesAndAids3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("allowancesAndAidsAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("allowancesAndAidsAmount1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("allowancesAndAidsAmount2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("allowancesAndAidsAmount3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("benefits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("compensationPackage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("compensationPackage1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("compensationPackage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("compensationPackage3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("compensationPackageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("compensationPackageAmount1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("compensationPackageAmount2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("compensationPackageAmount3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("insuranceCoverage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modyfiBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("wagesAndPerks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("SalaryAndBenefits", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.DataDB.QuanLiNhanSu.WorkHistory", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdUserInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("achievementSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyAndPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("jobdeScription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modyfiBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reasonForChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timeWorked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("workHistoryEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("workHistoryStart")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("WorkHistory", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.DataDB.TOKEN", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Token", (string)null);
                });

            modelBuilder.Entity("quan_li_app.Models.DataDB.UserData.UserInfo", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BHXH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("avatar16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("avatar32")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("avatar64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codeCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("ethnicity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UserInfomation", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
